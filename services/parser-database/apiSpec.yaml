swagger: "2.0"
info:
  description: "API description for the Parser/Database component of the Road Search Engine."
  version: "1.0.0"
  title: "Parser/Database Component"
  contact:
    email: "jaimehisao@google.com"
host: "localhost"
basePath: "/v1"
schemes:
- "https"
- "http"
paths:
  /parse:
    post:
      tags:
      - "parser"
      summary: "Trigger a document download, parse, and metadata tagging"
      responses:
        "200":
         description: "Document was parsed successfully"
        "409":
          description: "Parser service is already running."
        "500":
          description: "Server cannot parse the document and add it to the database. Likely if the document is not in the specified URL or if the database is offline."
  /articles/byKeyword:
    post:
      tags:
      - "articles"
      summary: "Finds any article that contains the specified keyword(s)"
      description: ""
      operationId: "returnArticleIDs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Keywords that need to be matched with an article in the database"
        required: true
        schema:
          $ref: '#/definitions/ArticleKeywordsQuery'
      responses:
        "200":
          description: "Successful Operation"
          schema:
            $ref: '#/definitions/ArticleKeywords'
  /articles/{id}:
    get:
      tags:
      - "articles"
      summary: "Returns the content of the requested article"
      description: "Single article ID value"
      operationId: "findTextByID"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: "ID of the requested article"
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Article"
        "404":
          description: "No article found with that ID"
        "500":
          description: "Error when retrieving the article"
definitions:
  Article:
    type: "object"
    properties:
      id:
        type: "string"
      number:
        type: "integer"
        format: "int 64"
      content:
        type: "string"
      wordCount:
        type: "integer"
        format: "int 64"
    required: 
    - id
    - number
    - content
    - wordCount
  ArticleKeywordsQuery:
    type: "object"
    properties:
       keywords:
        type: "array"
        items:
          type: "string"
    required:
    - keywords
  ArticleKeywords:
    type: object
    # Every additional property is one keyword and it's object
    additionalProperties:
      type: object
      # Every additional property is one article ID and it's object
      additionalProperties:
        type: object
        properties:
          weight:
            type: "number"
  Document:
    type: "object"
    properties:
      id:
        type: "string"
      city:
        type: "string"
      dateOfDownload:
        type: "string"
      hash:
        type: "string"
    required: 
    - id
    - city
    - dateOfDownload
    - hash